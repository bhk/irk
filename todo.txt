Current
=======

 - Get functionality working:
   - grid_demo: drag events (eventutils:captureDrag ?)
   - player
   - svg
   - exposer

 - i.js: When outside of any cell, memos are no-ops
 - i.js: Make "isolate" lightweight when a no-op (no child cells)
 - i.js: refactor...
    * Describe `memo`
    * defer(f, ...args)
         defer(_ => f(a,b))  <-->   defer(f, a, b)
    * Remove deferMemo
         deferMemo(f)(a,b)    -->   defer(memo(f), a,b)
 - i.js: Document "monitoring": "during execution of a cell, its accesses of
   other cells (inputs, intermediates) are logged."

 - e.js: Optimize setContent? (not re-populate all children?)
 - e.js: dereg listener on drop? [needed?]
 - Validate "clean" install using "npm update"
 - minion: {deps} should contribute to {needs} (?)
 - minion: easy way to silence commands per-class?
 - minion: {depMakefiles} (?)

Notes
=====

 * `$ npm update` installs dependencies.

 * FOO_q.js = test for FOO.js
   FOO_demo.js = interactive demo/text for FOO.js, viewable with
      `make 'Demo(FOO_demo.js)`

 * Javascript sources are ES "modules", and should be directly usable,
   as-is, by a browser or Node.js.  This implies:

   - Imports must use relative paths beginning with "./" or "../".
     (Browsers require this -- or "/", which would mean different things in
     different contexts.)

   - We add `"type":"module"` to package.json so Node will recognize them
     as such.

 * `./test.js` is remapped to `./no-test.js` when bulding bundles for the
   browser.  With minification, this also discards embedded unit tests.
